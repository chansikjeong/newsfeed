// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  nickname String

  Like     Like[]
  Comments Comments[]
  Posts    Posts[]
}

model Posts {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  content   String
  createdAt DateTime @default(now())
  type      Type

  Like     Like[]
  Comments Comments[]
  Users    Users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum Type {
  mobile
  pc
  console
}

model Comments {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  content   String
  createdAt DateTime @default(now())

  Posts Posts @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Users Users @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Like {
  id     Int @id @default(autoincrement())
  postId Int
  userId Int

  Posts Posts @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Users Users @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([postId, userId])
}
